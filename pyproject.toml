[build-system]
requires = ["setuptools", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[project]
name = "dfetch"
authors = [{name = "Ben Spoor", email = "dfetch@spoor.cc"}]
description = "Dependency fetcher"
readme = "README.md"
requires-python = ">=3.7"
keywords = ["dfetch", "vendoring", "dependencies"]
license = {text = "MIT"}
classifiers = [
    # Full list: https://pypi.python.org/pypi?%3Aaction=list_classifiers
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python",
]
dependencies = [
    "PyYAML==6.0.1",
    "coloredlogs==15.0.1",
    "pykwalify==1.8.0",
    "halo==0.0.31",
    "colorama==0.4.6",
    "typing-extensions==4.7.1; python_version <= '3.7.0'",
    "typing-extensions==4.9.0; python_version > '3.7.0'",
    "sarif-om==1.0.4",
    "semver==3.0.2",
    "patch-ng==1.17.4",
    "importlib-resources==5.4.0; python_version <= '3.7.0'",
    "cyclonedx-python-lib==4.2.2",
    "infer-license==0.1.0",
    'setuptools; python_version >= "3.12"',  # contains 'pkg_resources' for infer-license
]
dynamic = ["version"]

[project.urls]
Documentation = "https://dfetch.readthedocs.io/"
Repository = "https://github.com/dfetch-org/dfetch"

[project.optional-dependencies]
development = [
    # Quality dependencies
    'black==23.12.0',
    'doc8==1.1.1',
    'pydocstyle==6.3.0',
    'radon==6.0.1',
    'xenon==0.9.1',
    'types-PyYAML==6.0.12.12',
    'codespell==2.2.6',
    'mypy==1.8.0',
    #'flake8==5.0.4', # version 6.x.x requires python >= 3.8.1 (but 3.7 support window is until 2023-06-27)
    'bandit==1.7.6',
    'vulture==2.10',
    'pyroma==4.2',
    'isort==5.13.2',
    'pylint==3.0.3',
    "tomli; python_version < '3.11'", # Tomllib is default in 3.11, required for letting codespell read the pyproject.toml
    'pre-commit==3.6.0',
]
docs =[
    'sphinx==7.2.6',
    'sphinx-argparse==0.4.0',
    'plantweb==1.2.1',
    'sphinxcontrib.asciinema==0.3.7',
    # 'sphinx_design==0.3.0' # Required for landing page, but requires sphinx <6
]
test = [
    'pytest==7.4.3',
    'pytest-cov==4.1.0',
    'behave==1.2.6',
]
casts = [
    'asciinema==2.4.0',
]



[project.scripts]
dfetch = "dfetch.__main__:main"

[tool.setuptools.dynamic]
version = {attr = "dfetch.__version__"}

[tool.setuptools.packages.find]
include = ["dfetch", "dfetch.*"]

[tool.setuptools.package-data]
dfetch = ["resources/*.yaml"]

[tool.isort]
profile="black"

# See https://github.com/PyCQA/flake8/issues/234 ðŸ˜¢
[tool.flake8]
max-line-length = 120
max-complexity = 10
select = "B,C,E,F,W,T4"
ignore = "W503"

[tool.mypy]
files="dfetch"
ignore_missing_imports = true
strict = true

[tool.doc8]
ignore-path="doc/_build,doc/static/uml/styles/plantuml-c4"
max-line-length=120
verbose=0
ignore="D002,D004"

[tool.pylint.format]
max-line-length=120
disable="logging-fstring-interpolation"
min-similarity-lines=10

[tool.pydocstyle]
convention="google"

[tool.pytest]
filterwarnings = """
    ignore:.*Using or importing the ABCs.*is deprecated:DeprecationWarning
    ignore:.*the imp module.*is deprecated:DeprecationWarning
"""

[tool.coverage.run]
branch= true
source = ["dfetch"]

[tool.coverage.report]
show_missing= true

[tool.codespell]
skip = "*.cast,./venv,**/plantuml-c4/**,./example,.mypy_cache,./doc/_build/**,./build,*.patch,.git,**/generate-casts/demo-magic/**"
