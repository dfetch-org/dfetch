# This workflows will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

name: Upload Python Package

on:
  release:
    types: [created]
  pull_request:
    types: [opened, synchronize, reopened]

  # Allows to run this workflow manually
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    name: Build distribution ðŸ“¦
    runs-on: ubuntu-latest

    steps:
    - name: Harden the runner (Audit all outbound calls)
      uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
      with:
        egress-policy: audit

    - uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493 # v5.0.0
      with:
        persist-credentials: false
    - name: Set up Python
      uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6.0.0
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools setuptools_scm build --user
    - name: Set unique version for TestPyPI
      if: github.event_name != 'release'
      run: |
        ACTUAL_VERSION=$(python3 -m setuptools_scm)
        echo "SETUPTOOLS_SCM_PRETEND_VERSION=${ACTUAL_VERSION}" >> $GITHUB_ENV
    - name: Build a binary wheel and a source tarball
      run: python3 -m build
    - name: Store the distribution packages
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

  publish-to-testpypi:
    name: Publish Python distribution ðŸ“¦ to TestPyPI
    needs:
    - build
    runs-on: ubuntu-latest

    environment:
      name: testpypi
      url: https://test.pypi.org/p/dfetch

    permissions:
      id-token: write

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: Publish distribution ðŸ“¦ to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/

    - name: Test install from TestPyPI
      run: |
        pip install --index-url https://test.pypi.org/simple/ dfetch --extra-index-url https://pypi.org/simple
        python -c "import dfetch; print(dfetch.__version__)"

  deploy:
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    needs:
    - build
    environment:
      name: pypi
      url: https://pypi.org/p/dfetch
    permissions:
      id-token: write

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: Publish distribution ðŸ“¦ to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
